/*
 * This file is part of JAtm - The Jupiter Ace tape manager.
 *
 * JAtm is a tool to manage Jupiter Ace tape files in several formats.
 * Copyright (C) 2015  Ricardo Fernandes Lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package JatmUI;

import Jatm.JaTape;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Ricardo
 */
public class MemMapPanel extends javax.swing.JPanel {

    //---------------- Statics -------------------------------
    // Map position
    private static final int BAR_X0 = 24;
    private static final int BAR_Y0 = 18;
    private static final int BAR_Y_STEP = 20;
    private static final int BAR_HEIGHT = 6;
    // Memory Mapo image
    private static Image mapImage;
    static {
        try {
            mapImage = ImageIO.read(MemMapPanel.class.getResource("resources/JAtmMemoryMap.png"));
        } catch (IOException e) {
            System.out.println("IOException");
        }        
    }
    //--------------------------------------------------------
    
    private final JaTape tape;
    
    /**
     * Creates new form MemMapPanel
     * @param tapeFile
     */
    public MemMapPanel(JaTape tapeFile) {
        tape = tapeFile;
        initComponents();
    }

    @Override
    public void paintComponent(Graphics g) {
	super.paintComponent(g);
	this.setBackground(new Color(240,240,240)); // Background Color
        // Draw Map background image
        g.drawImage(mapImage, 0, 0, null);
        // Select Draw Color based on file type
        if(tape.isDict()) {
            g.setColor(new Color(0,192,0)); // Dict color
        } else {
            g.setColor(Color.MAGENTA);  // Byt color
        }
        // Calculate drawing coordinates
        byte[] data = tape.getData();
        int startAddress = tape.getParameter(JaTape.ADDRESS);
        int endAddress = startAddress + data.length - 1;
        int startY = (startAddress >> 13) & 0x07;
        int endY   = (endAddress   >> 13) & 0x07;
        int startX = (startAddress >> 5)  & 0xFF;
        int endX   = (endAddress   >> 5)  & 0xFF;
        // Draw memory map as colored bars
        for(int i = startY; i <= endY; i++) {
            int x0 = (i > startY)? 0 : startX;          // bar x offset
            int dx = 1 + ((i < endY)? 255 : endX) - x0; // bar length
            g.fillRect(BAR_X0 + x0, BAR_Y0 + i*BAR_Y_STEP, dx, BAR_HEIGHT);
        }       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
